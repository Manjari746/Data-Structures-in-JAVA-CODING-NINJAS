import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

public class Solution {
	public static ArrayList<Integer> longestConsecutiveIncreasingSequence(int[] arr) {
		HashMap<Integer,Boolean> map = new HashMap<>();
       int n=arr.length;
        
        for(int i=0;i<n;i++){
            map.put(arr[i],true);
        }
        
        int maxlength = 0;
        int start  = 0;
        
        for(int i=0;i<n && map.containsKey(arr[i]);i++){
                int length = 0;
                int temp = arr[i];
                while(map.containsKey(temp)){
                    length++;
                    map.put(temp,false);
                    temp = temp+1;
                }



                int starttemp = arr[i];
                temp = arr[i]-1;
                while(map.containsKey(temp)){
                    length++;
                    map.put(temp,false);
                    starttemp = temp;
                    temp = temp-1;
                }

                
                if(length > maxlength){
                    maxlength = length;
                    start = starttemp;
                }

                else if(length == maxlength){
                    maxlength = length;
                    for(int j=0;j<n;j++){
                        if(arr[j] == start){
                            start = start;
                            break;
                        }
                        else if(arr[j] == starttemp){
                            start = starttemp;
                            break;
                        }
                    }
                } 
        }



         ArrayList<Integer> output = new ArrayList<>();
      
           output.add(start);
           output.add(start+maxlength-1);
     
        
        return output;
    }
}
