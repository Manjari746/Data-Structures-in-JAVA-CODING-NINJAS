/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/


public class Solution {

	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) {
        if(head==null)
        return null;

LinkedListNode<Integer> evenHead=null,evenTail=null,oddHead=null,oddTail=null;

while(head!=null){
    if(head.data%2==0){
if(evenHead==null){
    evenHead=head;
    evenTail=head;
}
else{
    evenTail.next=head;
    evenTail=head;
}
    }


else{
if(oddHead==null){
    oddHead=head;
    oddTail=head;
}
else{
    oddTail.next=head;
    oddTail=head;
}
    }
    head=head.next;
}

if(evenHead==null){
oddTail.next=null;
return oddHead;
}


else if(oddHead==null){
evenTail.next=null;
return evenHead;
}

else{
oddTail.next=evenHead;
evenTail.next=null;
return oddHead;
}

	}
}
