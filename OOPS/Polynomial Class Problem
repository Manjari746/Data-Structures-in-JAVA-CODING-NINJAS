public class Polynomial {

	
	int arr[]=new int[10];

	public void setCoefficient(int degree, int coeff){

if(arr.length -1<degree){
	int temp[]=arr;
	arr=new int[degree+1];
	for(int i=0;i<temp.length;i++)
	arr[i]=temp[i];
}

arr[degree]=coeff;
		
	}
	
	// Prints all the terms(only terms with non zero coefficients are to be printed) in increasing order of degree. 
	public void print(){
		for(int i=0;i<arr.length;i++){
			if(arr[i]!=0)
			System.out.print(arr[i]+"x"+i+" ");
		}
		
	}

		
	

	
	// Adds two polynomials and returns a new polynomial which has result
	public Polynomial add(Polynomial p){

	 Polynomial ans=new Polynomial();

	 int p1length=this.arr.length;
	 int p2length=p.arr.length;

	


int i=0;
for(i=0;i<p1length && i<p2length;i++){
ans.setCoefficient(i,this.arr[i]+p.arr[i]);
}

while(i<p1length){
ans.setCoefficient(i,this.arr[i]);
i++;
}

while(i<p2length){
ans.setCoefficient(i,p.arr[i]);
i++;
}
		return ans;
}
	
	// Subtracts two polynomials and returns a new polynomial which has result
	public Polynomial subtract(Polynomial p){
			Polynomial ans=new Polynomial();

	 int p1length=this.arr.length;
	 int p2length=p.arr.length;

	 


int i=0;
for(i=0;i<p1length && i<p2length;i++){
ans.setCoefficient(i,this.arr[i]-p.arr[i]);
}


while(i<p1length){
ans.setCoefficient(i,this.arr[i]);
i++;
}
while(i<p2length){
ans.setCoefficient(i,-p.arr[i]);
i++;
}

return ans;
		
	}
	
	// Multiply two polynomials and returns a new polynomial which has result
	public Polynomial multiply(Polynomial p){
		Polynomial ans=new Polynomial();
        int oldcoeffterm=0;
for(int i=0;i<this.arr.length;i++){
	for(int j=0;j<p.arr.length;j++){
		int degreeterm=i+j;
		int coeffterm=this.arr[i]*p.arr[j];
		 oldcoeffterm=ans.getcoeff(degreeterm);
		ans.setCoefficient(degreeterm,coeffterm+oldcoeffterm);
	}}
	return ans;

	}

	public int getcoeff(int degree){
	if(degree<this.arr.length)
	return this.arr[degree];
	return 0;
}

}
