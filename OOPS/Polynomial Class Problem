public class Polynomial {


	int coeffdegree[]=new int[10];
	public void setCoefficient(int degree, int coeff){

if(degree>coeffdegree.length-1){
	// increase the size

int temp[]=coeffdegree;
coeffdegree=new int[degree+1];

for(int i=0;i<temp.length;i++){
	coeffdegree[i]=temp[i];
}}

coeffdegree[degree]=coeff;

}

	
	// Prints all the terms(only terms with non zero coefficients are to be printed) in increasing order of degree. 
	public void print(){
		for(int i=0;i<coeffdegree.length;i++){
			if(coeffdegree[i]!=0)
			System.out.print(coeffdegree[i]+"x"+i+" ");
		}
		
	}

	
	// Adds two polynomials and returns a new polynomial which has result
	public Polynomial add(Polynomial p){
     Polynomial a=new Polynomial();

	 int p1length=this.coeffdegree.length;
	 int p2length=p.coeffdegree.length;

	 int length=Math.min(p1length,p2length);


int i=0;
for(i=0;i<length;i++){
a.setCoefficient(i,this.coeffdegree[i]+p.coeffdegree[i]);
}


while(i<p1length){
a.setCoefficient(i,this.coeffdegree[i]);
i++;
}
while(i<p2length){
a.setCoefficient(i,p.coeffdegree[i]);
i++;
}

return a;
		
	}
	
	// Subtracts two polynomials and returns a new polynomial which has result
	public Polynomial subtract(Polynomial p){
			Polynomial a=new Polynomial();

	 int p1length=this.coeffdegree.length;
	 int p2length=p.coeffdegree.length;

	 int length=Math.min(p1length,p2length);


int i=0;
for(i=0;i<length;i++){
a.setCoefficient(i,this.coeffdegree[i]-p.coeffdegree[i]);
}


while(i<p1length){
a.setCoefficient(i,this.coeffdegree[i]);
i++;
}
while(i<p2length){
a.setCoefficient(i,-p.coeffdegree[i]);
i++;
}

return a;
		
	}

public int getcoeff(int degree){
	if(degree<this.coeffdegree.length)
	return this.coeffdegree[degree];
	return 0;
}

	
	
	// Multiply two polynomials and returns a new polynomial which has result
	public Polynomial multiply(Polynomial p){

Polynomial ans=new Polynomial();
int oldcoeffterm=0;
for(int i=0;i<this.coeffdegree.length;i++){
	for(int j=0;j<p.coeffdegree.length;j++){
		int degreeterm=i+j;
		int coeffterm=this.coeffdegree[i]*p.coeffdegree[j];
		 oldcoeffterm=ans.getcoeff(degreeterm);


		ans.setCoefficient(degreeterm,coeffterm+oldcoeffterm);
	}}
	return ans;
	
}}
