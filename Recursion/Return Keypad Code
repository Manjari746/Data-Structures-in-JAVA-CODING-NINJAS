public class solution {

	// Return a string array that contains all the possible strings
	public static String[] keypad(int n){
	// BASE CASE
        if(n==0){
            String output[]=new String[1];
        output[0]="";
        return output;
	}
	// recursion
    String[] smalloutput=keypad(n/10);
    // last digit find for options
    int lastdigit=n%10;
    String lastDigit=SingledigitOptions(lastdigit);
    
    String output[]=new String[smalloutput.length*lastDigit.length()];
    int k=0;
    for(int i=0;i<lastDigit.length();i++){
        for(int j=0;j<smalloutput.length;j++){
            output[k++]=smalloutput[j]+lastDigit.charAt(i);
        }
    }
    return output;
    
    
}
    public static String SingledigitOptions(int digit){
       if(digit==1|| digit==0)
       return "";
      else  if(digit==2)
            return "abc";
     else   if(digit==3)
            return "def";
       else if(digit==4)
            return "ghi";
       else if(digit==5)
            return "jkl";
       else if(digit==6)
            return "mno";
      else  if(digit==7)
            return "pqrs";
    else    if(digit==8)
            return "tuv";
     else   if(digit==9)
            return "wxyz";
            else
        return "";
    }   
}
